  from(bucket: "conso")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r["_measurement"] == "mesure_float")
  |> filter(fn: (r) => r["_field"] == "value")
  |> filter(fn: (r) => r["host"] == "aad92904f5e0")
  |> filter(fn: (r) => r["topic"] == "shellies/shellyem-485519C9F56D/emeter/0/total")
    |> map(fn: (r) => ({r with _value: r._value * 0.001 }))
  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)
  |> yield(name: "mean")
